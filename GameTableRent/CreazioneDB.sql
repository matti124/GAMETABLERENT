DROP DATABASE IF EXISTS GAME_TABLE_RENT;
CREATE DATABASE GAME_TABLE_RENT;
USE GAME_TABLE_RENT;

CREATE TABLE User (
Nome VARCHAR(60) NOT NULL,
Cognome varchar(30) not null,
ID int  AUTO_INCREMENT ,
Indirizzo varchar(60) NOT NULL,
email varchar(35) not null unique,
psw varchar(100) not null,
isAdmin bool default 0,
PRIMARY KEY(ID));

CREATE TABLE PRODOTTO (
    ID_Prod INT NOT NULL AUTO_INCREMENT,
    Nome VARCHAR(50) NOT NULL UNIQUE,
    Descrizione TEXT NOT NULL,
    Prezzo DOUBLE NOT NULL,
    PrezzoXDays DOUBLE NOT NULL, 
    Quantity SMALLINT NOT NULL,
    In_Cat BOOL DEFAULT 0 NOT NULL,
    Picture BLOB DEFAULT NULL,
    PRIMARY KEY (ID_Prod),
    INDEX idx_PrezzoXDays (PrezzoXDays), -- Aggiungi un indice a PrezzoXDays
    INDEX idx_Prezzo (Prezzo),           -- Aggiungi un indice a Prezzo
    CHECK (Prezzo > 0 AND PrezzoXDays > 0 AND Quantity > 0)
);


CREATE TABLE CARRELLO (
    ID_CARRELLO INT AUTO_INCREMENT NOT NULL, 
    ID_U INT NOT NULL, 
    PRIMARY KEY (ID_CARRELLO),
    FOREIGN KEY (ID_U) REFERENCES User(ID) ON DELETE CASCADE
);

CREATE TABLE PRODOTTI_CARRELLO (
    ID_CARRELLO INT NOT NULL,
    ID_PRODOTTO INT NOT NULL, 
    QUANTITY INT NOT NULL,
    GIORNI INT DEFAULT 0 NOT NULL,
    PREZZO DOUBLE NOT NULL,
    PREZZOXDAYS DOUBLE NOT NULL,
    PRIMARY KEY (ID_CARRELLO, ID_PRODOTTO),  -- Chiave primaria composta
    FOREIGN KEY (ID_CARRELLO) REFERENCES CARRELLO(ID_CARRELLO) ON DELETE CASCADE,
    FOREIGN KEY (ID_PRODOTTO) REFERENCES PRODOTTO(ID_Prod),
    FOREIGN KEY (PREZZOXDAYS) REFERENCES PRODOTTO(PrezzoXDays) ON UPDATE CASCADE,
    FOREIGN KEY (PREZZO) REFERENCES PRODOTTO(Prezzo) ON UPDATE CASCADE,
    CHECK (QUANTITY > 0 AND GIORNI >= 0)
);

CREATE TABLE ORDINE(
ID_ORDINE INT AUTO_INCREMENT NOT NULL,
ID_UTENTE INT,
DATA_ORDINE DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP,
PRIMARY KEY(ID_ORDINE),
FOREIGN KEY(ID_UTENTE) REFERENCES USER(ID) ON DELETE SET NULL);

CREATE TABLE PRODOTTI_ORDINE(
ID_ORDINE INT NOT NULL,
ID_PRODOTTO INT NOT NULL,
PREZZO DOUBLE NOT NULL,
PREZZOXDAYS DOUBLE NOT NULL,
GIORNI SMALLINT NOT NULL,
QUANTITY SMALLINT NOT NULL,
PRIMARY KEY(ID_ORDINE, ID_PRODOTTO),
FOREIGN KEY(ID_ORDINE) REFERENCES ORDINE(ID_ORDINE),
FOREIGN KEY(ID_PRODOTTO) REFERENCES PRODOTTO(ID_Prod));




